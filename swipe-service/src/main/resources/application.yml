server:
  port: 1001

app:
  datasource:
    master:
      url: ${APP_DATASOURCE_MASTER_URL}
      username: ${APP_DATASOURCE_MASTER_USERNAME}
      password: ${APP_DATASOURCE_MASTER_PASSWORD}
      driver-class-name: org.postgresql.Driver
    replica:
      url: ${APP_DATASOURCE_REPLICA_URL}
      username: ${APP_DATASOURCE_REPLICA_USERNAME}
      password: ${APP_DATASOURCE_REPLICA_PASSWORD}}
      driver-class-name: org.postgresql.Driver

spring:
  datasource:
    hikari:
      maximum-pool-size: 100
  jpa:
    hibernate:
      ddl-auto: update
  cache:
    type: redis
  data:
    redis:
      host: redis
      port: 6379
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: admin
    password: admin

deck-service:
  url: http://deck-service:1002
profile-service:
  url: http://profile-service:1000

#logging:
#  file:
#    name: application.log
#  level:
#    root: info

#management:
#  endpoints:
#    web:
#      exposure:
#        include: prometheus,health,info
#  prometheus:
#    metrics:
#      export:
#        enabled: true
#  metrics:
#    distribution:
#      percentiles-histogram:
#        "[http.server.requests]": true
#  endpoint:
#    prometheus:
#      enabled: true
#  server:
#    port: 1001