name: CI

on:
  push:
    branches: [ "develop" ]
    paths:
      - 'profile-service/**'
      - 'swipe-service/**'
      - 'deck-service/**'
      - 'notification-service/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ "main" ]


jobs:
  build-profile-service:
    runs-on: ubuntu-latest
    name: Build Profile Service
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Format code
        working-directory: profile-service
        run: mvn net.revelc.code.formatter:formatter-maven-plugin:2.24.1:format

      - name: Validate format
        working-directory: profile-service
        run: mvn formatter:validate

      - name: Build Profile Service
        run: mvn clean install -DskipTests
        working-directory: profile-service

  test-profile-service:
    runs-on: ubuntu-latest
    name: Test Profile Service
    needs: build-profile-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Format code
        working-directory: profile-service
        run: mvn net.revelc.code.formatter:formatter-maven-plugin:2.24.1:format

      - name: Validate format
        working-directory: profile-service
        run: mvn formatter:validate

      - name: Test Profile Service
        run: mvn test
        working-directory: profile-service

  image-profile-service:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Image Profile Service
    needs: test-profile-service

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Image Profile Service (multi-platform)
        uses: docker/build-push-action@v5
        with:
          context: ./profile-service
          file: ./profile-service/Dockerfile
          push: true
          tags: ghcr.io/marmevladek/architecture-of-highload-applications/profile-service:latest
          platforms: linux/amd64,linux/arm64

  build-swipe-service:
    runs-on: ubuntu-latest
    name: Build Swipe Service
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Format code
        working-directory: swipe-service
        run: mvn net.revelc.code.formatter:formatter-maven-plugin:2.24.1:format

      - name: Validate format
        working-directory: swipe-service
        run: mvn formatter:validate

      - name: Build swipe Service
        run: mvn clean install -DskipTests
        working-directory: swipe-service

  test-swipe-service:
    runs-on: ubuntu-latest
    name: Test Swipe Service
    needs: build-swipe-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Format code
        working-directory: swipe-service
        run: mvn net.revelc.code.formatter:formatter-maven-plugin:2.24.1:format

      - name: Validate format
        working-directory: swipe-service
        run: mvn formatter:validate

      - name: Test Swipe Service
        run: mvn test
        working-directory: swipe-service

  image-swipe-service:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Image Swipe Service
    needs: test-swipe-service
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Image Profile Service (multi-platform)
        uses: docker/build-push-action@v5
        with:
          context: ./swipe-service
          file: ./swipe-service/Dockerfile
          push: true
          tags: ghcr.io/marmevladek/architecture-of-highload-applications/swipe-service:latest
          platforms: linux/amd64,linux/arm64

  build-deck-service:
    runs-on: ubuntu-latest
    name: Build Deck Service
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Format code
        working-directory: deck-service
        run: mvn net.revelc.code.formatter:formatter-maven-plugin:2.24.1:format

      - name: Validate format
        working-directory: deck-service
        run: mvn formatter:validate

      - name: Build Deck Service
        run: mvn clean install -DskipTests
        working-directory: deck-service

  test-deck-service:
    runs-on: ubuntu-latest
    name: Test Deck Service
    needs: build-deck-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Format code
        working-directory: deck-service
        run: mvn net.revelc.code.formatter:formatter-maven-plugin:2.24.1:format

      - name: Validate format
        working-directory: deck-service
        run: mvn formatter:validate

      - name: Test Deck Service
        run: mvn test
        working-directory: deck-service

  image-deck-service:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Image Deck Service
    needs: test-deck-service
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Image Deck Service (multi-platform)
        uses: docker/build-push-action@v5
        with:
          context: ./deck-service
          file: ./deck-service/Dockerfile
          push: true
          tags: ghcr.io/marmevladek/architecture-of-highload-applications/deck-service:latest
          platforms: linux/amd64,linux/arm64

  build-notification-service:
    runs-on: ubuntu-latest
    name: Build Notification Service
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Format code
        working-directory: notification-service
        run: mvn net.revelc.code.formatter:formatter-maven-plugin:2.24.1:format

      - name: Validate format
        working-directory: notification-service
        run: mvn formatter:validate

      - name: Build Notification Service
        run: mvn clean install -DskipTests
        working-directory: notification-service

  image-notification-service:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Image Notification Service
    needs: build-notification-service
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Image Notification Service (multi-platform)
        uses: docker/build-push-action@v5
        with:
          context: ./notification-service
          file: ./notification-service/Dockerfile
          push: true
          tags: ghcr.io/marmevladek/architecture-of-highload-applications/notification-service:latest
          platforms: linux/amd64,linux/arm64

  image-tsung:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Image Tsung

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check for changes in tsung config
        id: tsung_changes
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED=$(git diff --name-only origin/${{ github.base_ref }} HEAD | grep '^infrastructure-services/tsung/' || true)
          echo "Changed files:"
          echo "$CHANGED"
          if [[ -n "$CHANGED" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Stop if no changes in tsung config
        if: steps.tsung_changes.outputs.changed == 'false'
        run: echo "No changes in Tsung config â€” skipping build." && exit 0

      - name: Set up Docker Buildx
        if: steps.tsung_changes.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: steps.tsung_changes.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Image Notification Service (multi-platform)
        if: steps.tsung_changes.outputs.changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./infrastructure-services/tsung
          file: ./infrastructure-services/tsung/Dockerfile
          push: true
          tags: ghcr.io/marmevladek/architecture-of-highload-applications/tsung:latest
          platforms: linux/amd64,linux/arm64