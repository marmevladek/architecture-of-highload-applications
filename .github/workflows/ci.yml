name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/src/**'
      - '**/pom.xml'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/src/**'
      - '**/pom.xml'
      - '.github/workflows/ci.yml'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  build-and-test:
    name: Build & Test ${{ matrix.service }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [profile-service, swipe-service, deck-service, notification-service]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Format code
        working-directory: ${{ matrix.service }}
        run: mvn net.revelc.code.formatter:formatter-maven-plugin:2.24.1:format

      - name: Validate code format
        working-directory: ${{ matrix.service }}
        run: mvn formatter:validate

      - name: Build (skip tests)
        working-directory: ${{ matrix.service }}
        run: mvn clean install -DskipTests

      - name: Run tests
        working-directory: ${{ matrix.service }}
        run: mvn test

  docker-image:
    name: Docker Image ${{ matrix.service }}
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build-and-test

    strategy:
      matrix:
        service: [profile-service, swipe-service, deck-service, notification-service]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/marmevladek/architecture-of-highload-applications/${{ matrix.service }}:latest
          platforms: linux/amd64,linux/arm64

  tsung-image:
    name: Docker Image Tsung
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check if Tsung config changed
        id: tsung_changes
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED=$(git diff --name-only origin/${{ github.base_ref }} HEAD | grep '^infrastructure-services/tsung/' || true)
          if [[ -n "$CHANGED" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Stop if no changes
        if: steps.tsung_changes.outputs.changed == 'false'
        run: echo "No changes in Tsung config â€” skipping."

      - name: Set up Docker Buildx
        if: steps.tsung_changes.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: steps.tsung_changes.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Tsung image
        if: steps.tsung_changes.outputs.changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./infrastructure-services/tsung
          file: ./infrastructure-services/tsung/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/marmevladek/architecture-of-highload-applications/tsung:latest
          platforms: linux/amd64,linux/arm64